

name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  # Job Build"
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: pwd
        
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
        
      - run: mkdir -p m4bs/bin; ls -l
      - run: |
          mkdir -p m4bs/bin
          mkdir -p m4bs/etc
          mkdir -p m4bs/var
          mkdir -p m4bs/temp
          mkdir -p m4bs/cgi
          
          echo "VERSION=${{ steps.get_version.outputs.VERSION }}" > m4bs/var/version
          
          echo "USER=" > m4bs/etc/m4bs.cfg
          echo "PASSWORD=" >> m4bs/etc/m4bs.cfg
          echo "STARTBOOT=no" >> m4bs/etc/m4bs.cfg
          echo "LOCALPATH=" >> m4bs/etc/m4bs.cfg
          echo "REMOTEPATH=/M4" >> m4bs/etc/m4bs.cfg
          echo "M4IP=" >> m4bs/etc/m4bs.cfg
          echo "UPDATE=1" >> m4bs/etc/m4bs.cfg
          cp var/info.txt m4bs/var/info.txt
          cp bin/*.* m4bs/bin
          cp etc/*.* m4bs/etc
          cp var/*.* m4bs/var
          cp cgi/*.* m4bs/cgi

      # compile and move
      - name: compile and move output folder
        run: zip -r m4bs.zip m4bs
      # upload artifact
      - uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: m4bs/

      - uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: m4bs.zip
          asset_name: m4bs.zip
          tag: ${{ github.ref }}
          overwrite: true
          #file_glob: true
          body: "Release  ${{ github.ref }}"
