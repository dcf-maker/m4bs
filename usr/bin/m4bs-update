#! /bin/bash

# This program is just an example of how to make a whiptail menu and some basic commands.
# Copyright (C) 2021  Destroyer  dcf.maker@gmail.com

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

do_log() {
  logger -t "[${0##*/}]:$1"
}


# Cargamos fichero de propiedades y version

m4bs-config

CONFIG_FILE=$HOME/.m4bs.conf
source $CONFIG_FILE


# Installed=`sudo apt-cache policy m4bs | sed -n '2p' | cut -c 14-` 
# Candidate=`sudo apt-cache policy m4bs | sed -n '3p' | cut -c 14-`

# if [ "$Installed" -ne "$Candidate" ]; then
# 	sudo apt-get update
# 	sudo apt-get install --only-upgrade
#     #apt-get -fy install openjdk-6-jre
# elif [ "$Installed" -eq "$Candidate" ]; then 
#     echo 'Candidate version already installed.'
# fi

VERSION=`sudo apt-cache policy m4bs | sed -n '2p' | cut -c 14-` 
NEW_VERSION=`sudo apt-cache policy m4bs | sed -n '3p' | cut -c 14-`

do_log "[INFO ] Chequeo Remote version: $NEW_VERSION."

do_help() {
	echo ""
	echo "Busca y actualiza m4bs"
	echo ""
	echo "m4bs-update <opcion>"
	echo "Opciones"
	echo "   -b        Busca actualizaciones de la aplicacion"
	echo "   -i        Busca y actualiza la aplicación"
	echo "   -s        Pregunta si quieres actualizar la aplicacion"
	echo ""
	exit 1
}

do_answer() {
	echo ""
	if [ "$NEW_VERSION" != "$VERSION" ]; then
		while true; do
			read -p "Existe una nueva versión ($NEW_VERSION) de M4BS, ¿desea actualizar? " sn
			case $sn in
				[Ss]* ) do_update; break;;
				[Nn]* ) exit;;
				* ) echo "Por favor responda si o no.";;
			esac
		done
	fi
	exit 1
}

do_update() {
	do_log "[INFO ] Existe Nueva version: $NEW_VERSION."
	do_log "[INFO ] Comenzamos proceso de actualizacion....."
#	if [ "$NEW_VERSION" != "$VERSION" ]; then
#		cd $HOME/.m4bs
#		git checkout main
#		git fetch --all
##		git reset --hard origin/main
#		git pull
#		echo Updated with the latest!
#	else
#		echo "m4bs esta actualizado!!"
#		exit 0
#	fi
	if [ "$NEW_VERSION" != "$VERSION" ]; then
		sudo apt-get update
		sudo apt-get install --only-upgrade m4bs
		echo Updated with the latest!
	else
		echo "m4bs esta actualizado!!"
		exit 0
	fi
}

# Opciones del programa

while [ -n "$1" ]; do # while loop starts
	case "$1" in
		-b)
			if [ "$NEW_VERSION" != "$VERSION" ]; then
				do_log "[INFO ] Chequeamos version..."
				echo "Nueva Version disponible: $NEW_VERSION"
				exit 99
			else
				do_log "[INFO ] Software esta actualizado!!"
				echo "m4bs esta actualizado!!"
				exit 0
			fi
			break
		;;
		-i)
			do_update
			break
		;;
		-s)
			do_answer
			break
		;;
		-h)
			do_help
			exit
			shift
		;;
		--)
			shift
			break
		;;

		*) echo "Option $1 not recognized"; do_help ;;
		esac
		shift
done
do_help
exit